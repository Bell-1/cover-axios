!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("axios")):"function"==typeof define&&define.amd?define(["axios"],t):"object"==typeof exports?exports.CoverAxios=t(require("axios")):e.CoverAxios=t(e.axios)}(self,(function(e){return(()=>{"use strict";var t={300:t=>{t.exports=e}},r={};function n(e){var o=r[e];if(void 0!==o)return o.exports;var a=r[e]={exports:{}};return t[e](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};return(()=>{n.r(o),n.d(o,{addApi:()=>b,addApiList:()=>g,addParamToUrl:()=>a,apiMap:()=>h,cleanPath:()=>r,default:()=>O,genApi:()=>A,getApi:()=>S,getHeaders:()=>v,removeHeaders:()=>y,request:()=>x,setBeforeRequest:()=>p,setHeaders:()=>m,setOptions:()=>l});var e=n(300),t=n.n(e);function r(e){return e.replace(/\/\//g,"/")}function a(e,t){var r=JSON.parse(JSON.stringify(e)),n=r.params;if(!n||!t)return r;if(t.length!==n.length)throw new Error("Bad request parameter. Please check it");for(var o in n)r.url=r.url.replace(n[o],t[o]);return r}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var u,s=function(){var e=localStorage.getItem("requestHeadersCache");try{return e?JSON.parse(e):{}}catch(e){return{}}}(),f={timeout:2500,baseURL:"/"},c=t().create(),d=c.interceptors,l=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return c.defaults.timeout=f.timeout=e.timeout||2500,c.defaults.baseURL=f.baseURL=e.baseURL||"/",f},p=function(e){u=e},v=function(){return s},m=function(e,t){if(e&&t)return s[e]=t,localStorage.setItem("requestHeadersCache",JSON.stringify(s)),s},y=function(e){if(e)return delete s[e],localStorage.setItem("requestHeadersCache",JSON.stringify(s)),s},g=function(e){var t,r=function(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,s=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){s=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(s)throw a}}}}(e);try{for(r.s();!(t=r.n()).done;){var n=t.value;b(n)}}catch(e){r.e(e)}finally{r.f()}},h={},b=function(e){h[e.apiName]=e},S=function(e){return h[e]},x=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],o=S(e);if(!o)return Promise.reject(new Error('"('.concat(e,'": The API does not exist')));var i=a(o,n),f=i.url,d=i.method,l=!u||u(o);return!1===l?Promise.reject("Request validation was't passed"):c.request({url:r(f),method:d,headers:s,data:t,params:o.method&&"GET"===o.method?t:void 0})};function A(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"GET",o=arguments.length>3?arguments[3]:void 0,a={apiName:e,method:n,url:r("/"+t)},i=t.match(/:\w+/g);return i&&(a.params=i),o&&(a.meta=o),a}const O={setOptions:l,setBeforeRequest:p,setHeaders:m,getHeaders:v,removeHeaders:y,getApi:S,addApi:b,addApiList:g,request:x,interceptors:d,version:"0.3.0"}})(),o})()}));
//# sourceMappingURL=cover-axios.min.js.map